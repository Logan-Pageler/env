#!/usr/bin/env python3
# Copyright (C) 2025
# Author:       Casey Sparks
# Date:         December 14, 2022
# Description:
"""Check an endpoint and wipe local user data. Should be cron on sensitive systems."""

from argparse import ArgumentParser, Namespace
from os import getlogin
from pathlib import Path
from shutil import rmtree
from socket import gethostname

from requests import get


def get_arguments() -> Namespace:
    """Get cmdline arguments.

    Returns:
        argparse.Namespace instance of user arguments.
    """
    parser = ArgumentParser(description=__doc__)

    parser.add_argument(  # --verbose
        "--verbose",
        "-v",
        dest="log_level",
        default=0,
        action="count",
        help="Specify logging verbosity. Default `CRITICAL`.",
    )

    arguments = parser.parse_args()
    arguments.log_level = range(40, -1, -10)[min(arguments.log_level, 3)]

    return arguments


def remote_flag() -> bool:
    """Checks remote for hostname match and returns true if true.

    Returns:
        Boolean for the existence of the remote flag.
    """
    status_code = get(  # Check flag exists
        f"https://raw.githubusercontent.com/caseysparkz/haltandcatchfire/main/{gethostname()}",
        timeout=5,
    ).status_code

    match status_code:
        case 200:
            return True

        case _:
            return False


def destroy_user_data() -> None:
    """Wipe sensitive user data from disk.

    Args:
        debug:   Run steps without taking any action.

    Raises:
        OSError:    If data cannot be removed.
    """
    dir_list = [  # List of directories to erase
        Path.home(),
        Path(f"/var/spool/cron/{getlogin()}"),  # User cronjobs
    ]

    for directory in dir_list:
        try:
            rmtree(directory)

        except OSError as exc:
            msg = "Failed to remove %s.", directory

            raise OSError(msg) from exc


if __name__ == "__main__":
    args = get_arguments()

    if remote_flag():
        destroy_user_data()
