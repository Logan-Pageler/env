---
- name: "Install gpg"
  become: true
  tags: ["apt"]
  when: "ansible_os_family == 'Debian'"
  ansible.builtin.apt:
    pkg:
      - "gnupg"
      - "gnupg-agent"
      - "gnupg-utils"
    state: "present"
    update_cache: true
    cache_valid_time: 3600

- name: "Create ~/.gnupg"
  tags: ["gnupg"]
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.gnupg/"
    state: "directory"
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"
    mode: "0700"

- name: "Install ~/.gnupg/gpg-agent.conf"
  tags: ["gnupg"]
  ansible.builtin.file:
    src: "{{ role_path }}/files/gpg-agent.conf"
    dest: "{{ ansible_env.HOME }}/.gnupg/gpg-agent.conf"
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"
    state: "link"
    force: true

- name: "Find role pubkeys"
  tags: ["gnupg"]
  register: "gpg_pubkeys"
  ansible.builtin.find:
    paths: "{{ role_path }}/files/pubkeys/"
    patterns:
      - "*.asc"
      - "*.gpg"
    recurse: false
    file_type: "file"

- name: "Import role pubkeys"
  tags: ["gnupg"]
  loop: "{{ gpg_pubkeys.files }}"
  changed_when: false
  ansible.builtin.command:
    cmd: "gpg --import {{ item.path }}"

- name: "Find role secretkeys"
  tags: ["gnupg"]
  register: "gpg_secretkeys"
  ansible.builtin.find:
    paths: "{{ role_path }}/files/secretkeys/"
    patterns:
      - "*.asc"
      - "*.gpg"
    recurse: false
    file_type: "file"

# For our secret keys we need to decrypt them first
- name: Create a temporary directory
  ansible.builtin.tempfile:
    state: directory
  register: temp_dir

- name: Copy the vaulted secrets and decrypt
  loop: "{{ gpg_secretkeys.files }}"
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ temp_dir.path }}/{{ item.path | basename }}"
    decrypt: true
    mode: '0600'

- name: "Import role secretkeys"
  tags: ["gnupg"]
  loop: "{{ gpg_secretkeys.files }}"
  changed_when: false
  ansible.builtin.command:
    cmd: "gpg --import {{ temp_dir.path }}/{{ item.path | basename }}"

- name: Clean up the temporary secret keys
  ansible.builtin.file:
    path: "{{ temp_dir.path }}"
    state: absent