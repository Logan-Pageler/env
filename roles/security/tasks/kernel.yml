---
- name: "[security.kernel]"
  become: true
  tags: ["kernel"]
  block:
    - name: "[security.kernel.sysctl]"
      loop: "{{ security_sysctl_vars }}"
      ansible.posix.sysctl:
        ignoreerrors: true
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: "present"
        sysctl_set: true
        reload: true

    - name: "[security.kernel.jitterentropy_rng]"
      ansible.builtin.blockinfile:
        path: "/etc/modules-load.d/jitterentropy_rng.conf"
        create: true
        mode: "644"
        block: "jitterentropy_rng"

    - name: "[security.kernel] Check /etc/default/grub exists"
      register: "security_etcdefaultgrub"
      ansible.builtin.stat:
        path: "/etc/default/grub"

    - name: "[security.kernel.grub]"
      when: "security_etcdefaultgrub.stat.exists"
      loop: "{{ security_grub_flags }}"
      ansible.builtin.replace:
        path: "/etc/default/grub"
        regexp: >
          ^(GRUB_CMDLINE_LINUX=(?:(?![" ]{{ item.option | regex_escape }}=).)*)(?:[" ]
          {{ item.option | regex_escape }}=\\S+)?(.*")$
        replace: "\\1 {{ item.option }}={{ item.value }}\\2"
        backup: true
      notify:
        - "[handler.grub]"
        - "[handler.initramfs]"
